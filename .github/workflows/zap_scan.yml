name: OWASP ZAP Automated Security Scan
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * 1' # Runs every Monday at 3 AM UTC
permissions:
  issues: write
  contents: read
  security-events: write
jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Run ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://3.80.13.217/DVWA'
          allow_issue_writing: false
          cmd_options: '-a -j -T 15 -z "-config zap.core.version=2.16.0"'
          fail_action: false
          
      - name: Format Date for Report Name
        id: date
        run: echo "report_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        
      - name: Debug - List Files
        run: ls -la
          
      - name: Create Reports Directory
        run: |
          mkdir -p security-reports
          
          # Find and copy the HTML report
          if [ -f "zap-full-scan.html" ]; then
            cp zap-full-scan.html "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.html"
          else
            echo "HTML report not found, searching for other HTML files..."
            find . -name "*.html" -exec cp {} "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.html" \; -quit
          fi
          
          # Find and copy the Markdown report  
          if [ -f "zap-full-scan.md" ]; then
            cp zap-full-scan.md "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.md"
          else
            echo "Markdown report not found, creating one from HTML..."
            echo "# ZAP Security Scan Report (${{ steps.date.outputs.report_date }})" > "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.md"
            echo "Please refer to the HTML report for complete details." >> "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.md"
          fi
          
          # Find and copy the JSON report
          if [ -f "zap-full-scan.json" ]; then
            cp zap-full-scan.json "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.json"
          else
            echo "JSON report not found, searching for other JSON files..."
            find . -name "*.json" -exec cp {} "security-reports/zap-scan-report-${{ steps.date.outputs.report_date }}.json" \; -quit
          fi
          
      - name: Create Index HTML
        run: |
          echo "<!DOCTYPE html>" > security-reports/index.html
          echo "<html lang='en'>" >> security-reports/index.html
          echo "<head>" >> security-reports/index.html
          echo "  <meta charset='UTF-8'>" >> security-reports/index.html
          echo "  <meta name='viewport' content='width=device-width, initial-scale=1.0'>" >> security-reports/index.html
          echo "  <title>OWASP ZAP Security Reports</title>" >> security-reports/index.html
          echo "  <style>" >> security-reports/index.html
          echo "    body { font-family: Arial, sans-serif; margin: 40px; line-height: 1.6; }" >> security-reports/index.html
          echo "    h1 { color: #333; }" >> security-reports/index.html
          echo "    .report-container { max-width: 800px; margin: 0 auto; }" >> security-reports/index.html
          echo "    .report-link { display: block; margin: 10px 0; padding: 10px; background-color: #f5f5f5; border-radius: 5px; text-decoration: none; color: #333; }" >> security-reports/index.html
          echo "    .report-link:hover { background-color: #e0e0e0; }" >> security-reports/index.html
          echo "    .target-info { background-color: #f9f9f9; padding: 15px; border-radius: 5px; margin: 20px 0; }" >> security-reports/index.html
          echo "    .version-info { color: #666; font-style: italic; margin-top: 20px; }" >> security-reports/index.html
          echo "  </style>" >> security-reports/index.html
          echo "</head>" >> security-reports/index.html
          echo "<body>" >> security-reports/index.html
          echo "  <div class='report-container'>" >> security-reports/index.html
          echo "    <h1>OWASP ZAP Security Scan Reports</h1>" >> security-reports/index.html
          echo "    <p>Latest scan completed on: ${{ steps.date.outputs.report_date }}</p>" >> security-reports/index.html
          echo "    <div class='target-info'>" >> security-reports/index.html
          echo "      <h3>Target Information:</h3>" >> security-reports/index.html
          echo "      <p><strong>IP Address:</strong> 3.80.13.217</p>" >> security-reports/index.html
          echo "      <p><strong>IPv6:</strong> 2600:1f10:464e:5500:d80c:150a:1680:fb44</p>" >> security-reports/index.html
          echo "      <p><strong>Server:</strong> Ubuntu 22.04 LTS</p>" >> security-reports/index.html
          echo "      <p><strong>Location:</strong> Virginia, Zone A</p>" >> security-reports/index.html
          echo "      <p><strong>Resources:</strong> 8 GB RAM, 2 vCPUs, 160 GB SSD</p>" >> security-reports/index.html
          echo "      <p class='version-info'><strong>ZAP Version:</strong> 2.16.0</p>" >> security-reports/index.html
          echo "    </div>" >> security-reports/index.html
          echo "    <h2>Available Reports:</h2>" >> security-reports/index.html
          echo "    <a class='report-link' href='zap-scan-report-${{ steps.date.outputs.report_date }}.html'>HTML Report (${{ steps.date.outputs.report_date }})</a>" >> security-reports/index.html
          echo "    <a class='report-link' href='zap-scan-report-${{ steps.date.outputs.report_date }}.md'>Markdown Report (${{ steps.date.outputs.report_date }})</a>" >> security-reports/index.html
          echo "    <a class='report-link' href='zap-scan-report-${{ steps.date.outputs.report_date }}.json'>JSON Report (${{ steps.date.outputs.report_date }})</a>" >> security-reports/index.html
          echo "  </div>" >> security-reports/index.html
          echo "</body>" >> security-reports/index.html
          echo "</html>" >> security-reports/index.html
      
      - name: Upload Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report-${{ steps.date.outputs.report_date }}
          path: security-reports/
          retention-days: 90
