name: OWASP ZAP Automated Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * 1' # Runs every Monday at 3 AM UTC
permissions:
  issues: write
  contents: read
jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://3.80.13.217/DVWA" 
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          cmd_options: "-a"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4  
        with:
          name: zap-report-${{ github.run_id }}
          path: report_html.html

      - name: Store SARIF Security Report
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://3.80.13.217/DVWA"
          format: "sarif"
          output: "zap-results.sarif"

      - name: Upload Security Report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "zap-results.sarif"

      - name: Create GitHub Issues for Vulnerabilities
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}  # Using Personal Access Token (GH_PAT)
          script: |
            const fs = require('fs');
            const sarif = JSON.parse(fs.readFileSync('zap-results.sarif', 'utf8'));
            const findings = sarif.runs[0].results;

            for (const finding of findings) {
              const issueTitle = `ZAP Security Issue: ${finding.ruleId}`;
              const issueBody = `${finding.message.text}\n\n**Severity:** ${finding.level}\n\n**Location:** ${finding.locations[0].physicalLocation.artifactLocation.uri}`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
              });
            }
